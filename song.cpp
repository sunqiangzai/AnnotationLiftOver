/*
 * =====================================================================================
 *
 *       Filename:  song.cpp
 *
 *    Description:  
 *
 *        Version:  1.0
 *        Created:  06/23/2017 21:51:57
 *       Revision:  none
 *       Compiler:  gcc
 *
 *         Author:  Baoxing Song (songbx.me), song@mpipz.mpg.de
//        Company:  MPIPZ
 *
 * =====================================================================================
 */
#include <stdlib.h>
/*************************************************************************




 ************************************************************************/

#include<iostream>
#include<string>
#include "reAnnotationAndMsa.h"
#include "InputParser.h"
#include "controlLayer.h"
using namespace std;


int main(int argc, char** argv){
    if( argc<=1 ){
        usage();
        return 1;
    }
    std::string program = argv[1];
    if( program.compare("-h") == 0 || program.compare("--help") == 0 ){
        usage();
    }else if( program.compare("getGenomeSequence") == 0 ) {
        return getGenomeSequence(--argc, ++argv);
    }else if( program.compare("coordinateLiftOver") == 0 ) {
        return coordinateLiftOver(--argc, ++argv);
    }else if( program.compare("gffCoordinateLiftOver") == 0 ) {
        return gffCoordinateLiftOver(--argc, ++argv);
    }else if( program.compare("getSequences") == 0 ) {
        return getSequences(--argc, ++argv);
    }else if( program.compare("annotationLiftOver") == 0 ) {
        return annotationLiftOver(--argc, ++argv);
    }else if( program.compare("annotationLiftOverAndOrth") == 0 ) {
        return annotationLiftOverAndOrth(--argc, ++argv);
    } else if( program.compare("annotationAndExonerateAndNovo") == 0 ) {
        return reAnnotationAndExonerateAndNovo(--argc, ++argv);
    } else if( program.compare("countNumberOfTwoneighborSNP") == 0 ) {
        return myCountNumberOfTwoneighborSNP(--argc, ++argv);
    }else if( program.compare("countNumberSNPAndIndel") == 0 ) {
        return mycountNumberSNPAndIndel(--argc, ++argv);
    }else if ( program.compare("generateRandomSdi") == 0 ){
        return myGenerateRandomSdi(--argc, ++argv);
    }else if( program.compare("runExonerate") == 0 ){
        std::string cdsSequence="ATGGCTGATAGGATCAAAGGTCCATGGAGTCCTGAAGAAGACGAGCAGCTTCGTAGGCTTGTTGTTAAATACGGTCCAAGAAACTGGACAGTGATTAGCAAATCTATTCCCGGTAGATCGGGGAAATCGTGTCGTTTACGGTGGTGCAACCAGCTTTCGCCGCAAGTTGAGCATCGGCCGTTTTCGGCTGAGGAAGACGAGACGATCGCACGTGCTCACGCTCAGTTCGGTAATAAATGGGCGACGATTGCTCGTCTTCTCAACGGTCGTACGGACAACGCCGTGAAGAATCACTGGAACTCGACGCTCAAGAGGAAATGCGGCGGTTACGACCATCGGGGTTACGATGGTTCGGAGGATCATCGGCCGGTTAAGAGATCGGTGAGTGCGGGATCTCCACCTGTTGTTACTGGGCTTTACATGAGCCCAGGAAGCCCAACTGGATCTGATGTCAGTGATTCAAGTACTATCCCGATATTACCTTCCGTTGAGCTTTTCAAGCCTGTGCCTAGACCTGGTGCTGTTGTGCTACCGCTTCCTATCGAAACGTCGTCTTCTTCCGATGATCCACCGACTTCGTTAAGCTTGTCACTTCCTGGTGCCGACGTAAGCGAGGAGTCAAACCGTAGCCACGAGTCAACGAATATCAACAACACCACTTCGAGCCGCCACAACCACAACAATACGGTGTCGTTTATGCCGTTTAGTGGTGGGTTTAGAGGTGCGATTGAGGAAATGGGGAAGTCTTTTCCCGGTAACGGAGGCGAGTTTATGGCGGTGGTGCAAGAGATGATTAAGGCGGAAGTGAGGAGTTACATGACGGAGATGCAACGGAACAATGGTGGCGGATTCGTCGGAGGATTCATTGATAATGGCATGATTCCGATGAGTCAAATTGGAGTTGGGAGAATCGAGTAG";
        std::string refSequence="CCTATCTTTTGTTAACCGCACATTTTACATCACGTTTCCTAAACCGAACATTAATATCTAACCATTTTTATACATTCACTTAATATCGCTCACACGGTTCTTTGTCAATCCCATTTTAATCCAGCTTCGTTTCAAATTATTGAGGTTTAGATCTTTTTATGATCATAGAGCAACTATATATAGATTTAGTATTGTCAATTTGTCATGCACTGTTATATGCATGAATTAGGTGTTTGTGTGTTGTTTAGTAATTAATTATACCTTCTTAGTGACAATTTGTTTTCTTTATTAGTAATGAAATTTGTGGTCAATAATTTTGATTAGTTTTCAACCCGGAAAATCGGTTATATGTAAAGTAGATATTATCATAAAGTTTTTATGTGAAGTGCTATACAGCCTGGCTTCGCTATTCTAAAGTCAGACTAAACATAAAAATAAATAAAAACTGTCCTTACCCAAACCTAACCGTTATCATCTTTTTATTTTTTTCTTCAGATATTTCTTTTTAATTTTTATTTCCCCTATAAAAAAATTTAAATTCACCTCAAATTGTGCGAATATTATCATGGCTTTGCTAGTTGGGTTTCGTGATTTTGTCTCTTTAACTTCTTACTTTCGCCACGCGCTTAAATGGCGCGTGTACTCACAAACTCATACTTTGAGACTCGACTGATCTCCACGCTCAACTATACGAAATTGCTGATCTTGAACAAAATTATTACGAAAACGACAAAAAAGACACATCGACGTAGTCAGGCTTCGACGCGTGTCCACTTACAGCTGTACCGCAAACTTTGAAAAACCGCTTGCGTGGAAGAAGCGTTGCCCATGACTTCTCCACCGTCTTAACCGGTTTCCGGTTATCCTCCTCTCTTAAATCTCTGTATAAATAATTTTGTCCTCTCTTTAGTTTCTCGAACTTGTTTTTGGTTCATCTCTCAAAACCAAAATCACTAAAGAGGAGAAGATTGCTAAAGTTTGATAAAACATTCCAAAATCAATGGCTGATAGGATCAAAGGTCCATGGAGTCCTGAAGAAGACGAGCAGCTTCGTAGGCTTGTTGTTAAATACGGTCCAAGAAACTGGACAGTGATTAGCAAATCTATTCCCGGTAGATCGGGGAAATCGTGTCGTTTACGGTGGTGCAACCAGCTTTCGCCGCAAGTTGAGCATCGGCCGTTTTCGGCTGAGGAAGACGAGACGATCGCACGTGCTCACGCTCAGTTCGGTAATAAATGGGCGACGATTGCTCGTCTTCTCAACGGTCGTACGGACAACGCCGTGAAGAATCACTGGAACTCGACGCTCAAGAGGAAATGCGGCGGTTACGACCATCGGGGTTACGATGGTTCGGAGGATCATCGGCCGGTTAAGAGATCGGTGAGTGCGGGATCTCCACCTGTTGTTACTGGGCTTTACATGAGCCCAGGAAGCCCAACTGGATCTGATGTCAGTGATTCAAGTACTATCCCGATATTACCTTCCGTTGAGCTTTTCAAGCCTGTGCCTAGACCTGGTGCTGTTGTGCTACCGCTTCCTATCGAAACGTCGTCTTCTTCCGATGATCCACCGACTTCGTTAAGCTTGTCACTTCCTGGTGCCGACGTAAGCGAGGAGTCAAACCGTAGCCACGAGTCAACGAATATCAACAACACCACTTCGAGCCGCCACAACCACAACAATACGGTGTCGTTTATGCCGTTTAGTGGTGGGTTTAGAGGTGCGATTGAGGAAATGGGGAAGTCTTTTCCCGGTAACGGAGGCGAGTTTATGGCGGTGGTGCAAGAGATGATTAAGGCGGAAGTGAGGAGTTACATGACGGAGATGCAACGGAACAATGGTGGCGGATTCGTCGGAGGATTCATTGATAATGGCATGATTCCGATGAGTCAAATTGGAGTTGGGAGAATCGAGTAGACAAAGTGAGATTATTAGGAAACTGTTTAAATTGGAGAAGAAGAAAAATGCTCTGTTTTTTTCTCCTTTGGATTAGGCTTAAGAATTTTGGGTTTTAAGGAAATGTATAGAGGAAATCGAGTGAACAAAGCTCGAGAGCTGGGGACGTAGTGACGAAGACGAAGATCAAATTTCTCTTAAGCTATTCAGGAAAATAAAATAAATTTTTATTTATAACTACGCTTAATGATGATAATAGATCAAATTAATACACAAAGTATCACAAAGTGAAAGATAAATGATCCAGTTAAAGAACAAGTTTGTCGAGGATTGGTAAAGACTTGCATTTGGCAACTAAAGGCACAGATTTGGGCATGGTAAGACCCTTTCCTTCCGACATGTCAACGGCAACGTCATTGTCTCTCTCCCAATCGAAACACTGGATCAATGAGCCTAAAGCTAAGCTCAGTACTAGTTGGGCCAGGCCCATACCAGGACATGCTCTCCTACCGATTCCGAAAGGCAGAAACTTACCACGATGGGTCTCTGATTCAAACCTCTCTGGTTTGAAAGTTTCTGGGTCATCCCATACATTTGGGTCTCTCTGAATAGCCCACGCATTGATAAATAGCCAGGTGCGACGTGGAATGTCAAATCCAGCGACTTCACAGTCAGTGGATGAAGCGTGTGGGACAAGTAAGGGCGCCGCCGGAAACAAACGAAGAGTCTCAGAGATCACATTGTTGAGATAGGGACACTTGCCAGTATCTGATTCCTCAAACACACGCCCTTCTTTCGAAACCTCGTTTAGTTCCGTTTTGAGTTTCCTTAAAACTTCCGGATGATTTAGAAGGTTAGCCATAGCCCACTCCAACGTCACTGCGGTTGTGTCCGTTCCAGCAAGCAACATCACCTGCAATGAATCCTTTGAATCTTTGATGAATCAATCTTGATCACTCCTATTAACGATTCAAAATTATAGGAATTAAAAACTCATGTACCTGTACGAGCCCTTTGATGA";
        //std::cout << cdsSequence << std::endl << refSequence << std::endl;
        //runExonerate(cdsSequence, refSequence);
    }else if( program.compare("readAugustusGff") == 0 ){
        std::string fileLocation = "./testData/PA10000.gff3";
        readAugustusGff(fileLocation);
    }else if (program.compare("toupper") == 0){
        string str = "asder";
        songToUpCase(str);
        cout << str << endl;
    }else if (program.compare("removeblank") == 0){
        string str = "a sd e r";
        str=songStrRemoveBlank(str);
        cout << str << endl;
    } else if (program.compare("translation") == 0){
        string str = "ATg-GCTGATAGGATCAAAGGTCCATGGAGTCCTGAAGAAGACGAGCAGCTTCGTAGGCTTGTTGTTAAATACGGTCCAAGAAACTGGACAGTGATTAGCAAATCTATTCCCGGTAGATCGGGGAAATCGTGTCGTTTACGGTGGTGCAACCAGCTTTCGCCGCAAGTTGAGCATCGGCCGTTTTCGGCTGAGGAAGACGAGACGATCGCACGTGCTCACGCTCAGTTCGGTAATAAATGGGCGACGATTGCTCGTCTTCTCAACGGTCGTACGGACAACGCCGTGAAGAATCACTGGAACTCGACGCTCAAGAGGAAATGCGGCGGTTACGACCATCGGGGTTACGATGGTTCGGAGGATCATCGGCCGGTTAAGAGATCGGTGAGTGCGGGATCTCCACCTGTTGTTACTGGGCTTTACATGAGCCCAGGAAGCCCAACTGGATCTGATGTCAGTGATTCAAGTACTATCCCGATATTACCTTCCGTTGAGCTTTTCAAGCCTGTGCCTAGACCTGGTGCTGTTGTGCTACCGCTTCCTATCGAAACGTCGTCTTCTTCCGATGATCCACCGACTTCGTTAAGCTTGTCACTTCCTGGTGCCGACGTAAGCGAGGAGTCAAACCGTAGCCACGAGTCAACGAATATCAACAACACCACTTCGAGCCGCCACAACCACAACAATACGGTGTCGTTTATGCCGTTTAGTGGTGGGTTTAGAGGTGCGATTGAGGAAATGGGGAAGTCTTTTCCCGGTAACGGAGGCGAGTTTATGGCGGTGGTGCAAGaGATGATTAAGGCGGAAGTGAGGAGTTACATGACGGAGATGCAACGGAACAATGGTGGCGGATTCGTCGGAGGATTCATTGATAATGGCATGATTCCGATGAGTCAAATTGGAGTTGGGAGAATCGAGTAG";
       // ;
        string proSeq=nA2AA(str);
        cout << str << endl << proSeq << endl;
    }else{
        usage();
    }
    return 0;
}